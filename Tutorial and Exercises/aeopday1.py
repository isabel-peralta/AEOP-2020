# -*- coding: utf-8 -*-
"""AEOPDay1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ILbqOPqaFJ-Eg_BuNre5c8IKBTZWqwAp
"""

friends = ["Rachel", "Monica", "Pheobe", "Chandler"]
lucky_numbers = [42, 8, 15, 16, 23, 4]
friends[1]="Joey"
friends2 = friends.copy()
print(friends2)

coordinates = [(4, 5), (6, 7), (80, 34)]
#^ is a tuple and tuples cannot be modified, as supposed to lists
coordinate[1] = (8, 9)
print(coordinates[0])

def say_hi(a):
  print("Hello " + a)

say_hi("Isabel")

def cube(num):
  return num*num*num
#no code after the return statement because return breaks out of the function  

result = cube(4)
print(result)

is_male = True
is_tall = False

if is_male and is_tall: 
  print("You are a male or tall or both")
elif is_male and not(is_tall)  :
  print("you are male and not tall")
else:
  print("you are neither male nor tall")

def max_num(num1, num2, num3):
  if num1 >= num2 and num1 >= num3:
    return num1
  elif num2 >= num1 and num2 >= num3:
    return num2
  else: 
    return num3

print(max_num(300, 40, 5))

num1 = float(input("Enter first number: "))
op = input("Enter operator: ")
num2 = float(input("Enter second number: "))

if op == "+":
  print(num1 + num2)
elif op == "-":
  print(num1 - num2) 
else:
  print("Invalid operator")

monthConversions = {
    "Jan": "January",
    "Feb": "February",
    "Mar": "March",
    "Apr": "April"
}

print(monthConversions.get("Apr", "Not a valid Key"))

i = 1
while i <= 10:
  print(i)
  i += 1

print("Done with loop")

friends = ["Rachel", "Monica", "Pheobe"]
for index in range(len(friends)):
  print(friends[index])

friends = ["Rachel", "Monica", "Pheobe"]
for index in range(5):
  if index == 0: 
    print("first Iteration")
  else: 
    print("Not first")

def raise_to_power(base_num, pow_num):
  result = 1
  for index in range(pow_num):
    result = result * base_num
  return result

print(raise_to_power(3, 4))

number_grid = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
  [0]               
]
#first is index of the row to pull second is the index of the column
print(number_grid[2][1])

number_grid = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
  [0]               
]

for row in number_grid:
  for col in row:
    print(col)

def translate(phrase):
  translation = ""
  for letter in phrase:
    if letter in "AEIOUaeiou":
      translation = translation + "g"
    else:
      translation = translation +letter
  return translation        

print(translate(input("Enter a phrase: ")))

number = int(input("Enter a number: "))
print(number)